apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

static def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        // Enabling multidex support 分包支持
        // multiDexEnabled true
    }

    // signingConfigs必须放到buildTypes之前不然无法找到release和debug信息
    signingConfigs {
        debug {
            storeFile file('sign/sign.jks')
            storePassword '111111'
            keyAlias 'sign'
            keyPassword '111111'
        }
        release {
            storeFile file('sign/sign.jks')
            storePassword '111111'
            keyAlias 'sign'
            keyPassword '111111'
        }
    }

    // 以下多渠道支持
    flavorDimensions "default"

    productFlavors {

        // 正式渠道包
        Online {

        }
    }

    // 替换manifestPlaceholders
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE:name ]
    }

    buildTypes {
        release {
            minifyEnabled false // minifyEnabled 混淆处理
            shrinkResources false// shrinkResources 去除无用资源
            signingConfig signingConfigs.release
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            zipAlignEnabled true
        }

        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = "rxDemo_" +
                            "${releaseTime()}_" +
                            "v${defaultConfig.versionName}_" +
                            "${variant.productFlavors[0].name}" +
                            ".apk"
                    outputFileName = fileName
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //android support
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:preference-v7:$supportLibraryVersion"

    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    //Gson converter
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    //Okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    //Okhttp logging
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    //RxJava　adapter
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    // rxandroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    // livedata support
    implementation "android.arch.lifecycle:extensions:1.1.1"
}

// enable multidex
//afterEvaluate {
//    tasks.matching {
//        it.name.startsWith('dex')
//    }.each { dx ->
//        if (dx.additionalParameters == null) {
//            dx.additionalParameters = []
//        }
//        dx.additionalParameters += '--multi-dex' // enable multidex
//    }
//}
